name: Deploy Secrets to GKE

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy-secrets:
    name: Deploy API Keys to Kubernetes
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        install_components: 'gke-gcloud-auth-plugin,kubectl'
    
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials sambaai-gke-cluster \
          --zone us-central1-c \
          --project ai-workflows-459123
    
    - name: Create Kubernetes secrets
      env:
        # LLM API Keys
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GEN_AI_API_KEY: ${{ secrets.GEN_AI_API_KEY }}
        
        # Google OAuth
        GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
        GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
        
        # Optional: Web Search
        BING_API_KEY: ${{ secrets.BING_API_KEY }}
        
        # Optional: Slack Bot
        DANSWER_BOT_SLACK_APP_TOKEN: ${{ secrets.DANSWER_BOT_SLACK_APP_TOKEN }}
        DANSWER_BOT_SLACK_BOT_TOKEN: ${{ secrets.DANSWER_BOT_SLACK_BOT_TOKEN }}
        
        # Optional: Observability
        LANGFUSE_SECRET_KEY: ${{ secrets.LANGFUSE_SECRET_KEY }}
        LANGFUSE_PUBLIC_KEY: ${{ secrets.LANGFUSE_PUBLIC_KEY }}
        LANGFUSE_HOST: ${{ secrets.LANGFUSE_HOST }}
      run: |
        echo "üîê Creating Kubernetes secrets..."
        cd kubernetes/scripts
        chmod +x create-secrets.sh
        ./create-secrets.sh
        
        echo "‚úÖ Secrets created successfully!"
        echo ""
        echo "üìã Current secrets in namespace:"
        kubectl get secrets -n sambaai
    
    - name: Apply updated deployment
      run: |
        echo "üöÄ Applying updated API server deployment..."
        kubectl apply -f kubernetes/manifests/api-server.yaml
        
        echo "‚ôªÔ∏è Restarting API deployment to pick up new secrets..."
        kubectl rollout restart deployment/sambaai-api -n sambaai
        
        echo "‚è≥ Waiting for rollout to complete..."
        kubectl rollout status deployment/sambaai-api -n sambaai --timeout=300s
    
    - name: Verify deployment
      run: |
        echo "üîç Checking deployment status..."
        kubectl get pods -n sambaai -l app=sambaai-api
        
        echo ""
        echo "üìä API server logs (last 20 lines):"
        kubectl logs -n sambaai -l app=sambaai-api --tail=20 || true 